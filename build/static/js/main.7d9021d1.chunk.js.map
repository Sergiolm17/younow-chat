{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","socketIOClient","App","useNiconico","displayMillis","lineWidth","ref","emitText","useEffect","on","console","log","id","msg","text","String","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAIIA,E,yFAEJA,EAASC,MA2BMC,MAzBf,WAAgB,IAAD,EACaC,sBAAY,CAChCC,cAAe,IACfC,UAAW,IAHJ,mBACJC,EADI,KACCC,EADD,KAsBX,OAhBAC,qBAAU,WACNR,EAAOS,GAAG,WAAW,WACjBC,QAAQC,IAAI,2BACZD,QAAQC,IAAIX,EAAOY,OAEvBZ,EAAOS,GAAG,cAAc,SAACI,GACrBH,QAAQC,IAAI,aAAcE,GACtBA,EAAIC,MAAMP,EAASQ,OAAOF,EAAIC,UAEtCP,EAAS,eACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,OACV,CAACA,IAEG,qBAAKS,UAAU,iBAAiBV,IAAKA,KClBjCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d9021d1.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport \"./App.css\";\nimport { useNiconico } from \"react-niconico\";\nvar socket;\n\nsocket = socketIOClient();\n//{ nivel: \"122\", username: \".Aracely.\", text: \"Lol\", src: null };\nfunction App() {\n    const [ref, emitText] = useNiconico({\n        displayMillis: 10000,\n        lineWidth: 3,\n        //lineWidth: 10,\n    });\n    useEffect(() => {\n        socket.on(\"connect\", () => {\n            console.log(\"Successfully connected!\");\n            console.log(socket.id);\n        });\n        socket.on(\"roomJoined\", (msg) => {\n            console.log(\"roomJoined\", msg);\n            if (msg.text) emitText(String(msg.text));\n        });\n        emitText(\"Configurado\");\n        emitText(\"1\");\n        emitText(\"2\");\n        emitText(\"3\");\n        emitText(\"4\");\n    }, [emitText]);\n\n    return <div className=\"App App-header\" ref={ref}></div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}